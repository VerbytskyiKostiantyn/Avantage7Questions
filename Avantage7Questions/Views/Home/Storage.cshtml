@using Avantage7Questions.Models.View_Models
@* @model StorageVM *@


@*
    <div style="border: 1px solid black; padding: 10px;">
        <h2>@vm.Question.Name @vm.Question.LastName</h2>
        <p>Мобільний телефон: @vm.Question.PhoneNumber</p>
        <p>Бажає отримати: @itemsStack</p>
        <p>Текстова інформація: @vm.Question.Data</p>
        @foreach (Image image in vm.Images)
        {
            var base64String = Convert.ToBase64String(image.ImageInBytes);
            var imgSrc = $"data:image/jpeg;base64,{base64String}";
            <img src="@imgSrc">
        }
    </div> *@

<section>

    <div class="py-8 px-4 mx-auto max-w-screen-2xl text-center lg:py-8 lg:px-12">

        <div class="text-center mx-5" id="myGrid"></div>
    </div>
    <div class="mx-auto max-w-screen-2xl text-center">
        <button type="button" id="buttonForCalendar" class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-full text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700">Переглянути календар</button>
    </div>
    <div style="display:none" id="calDiv">
        <div class="py-8 px-4 mx-auto max-w-screen-xl text-center lg:py-16 lg:px-12" id="calendar"></div>
    </div>
</section>



@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const grid = new gridjs.Grid({

                columns: [
                    {
                        name: "Id",
                        hidden: true
                    },
                    {
                        name: "Ім'я",
                        sort: {
                            enabled: true,
                            default: 'asc'
                        }
                    },
                    { name: "Номер телефона" },
                    { name: "Стан" },
                    { name: "Останнє оновлення стану" },
                    { name: "Бажає замовити" },
                    {
                        id: 'photo', name: gridjs.html(`<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                                      <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4z"/>
                                      <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0"/>
                                    </svg>`)
                    },
                    { name: "Дата замовлення" },
                    {
                        name: 'Дії',
                        formatter: (_, row) => gridjs.html(`<a href=" /Home/Info?id=${row.cells[0].data}">
                                                                    <svg class="w-[27px] h-[27px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.7" d="M10 11h2v5m-2 0h4m-2.592-8.5h.01M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                                                                    </svg>
                                                                </a>`)
                    }
                ],

                server: {
                    url: '/Home/getAllQuestions',
                    then: data => data.map(card => [card.Id, card.Name + " " + card.LastName, card.PhoneNumber,
                    gridjs.html(`<label style="background-color: ${card.StatusBackgroundColor}" class="text-white flex justify-center  font-medium rounded-lg text-sm px-5 py-2.5 text-center">${card.CurrentStatus}</label>`),
                    card.LastUpdateDate, card.ItemsString,
                    card.IsPhotos ?
                        gridjs.html(
                            `<svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 11.917 9.724 16.5 19 7.5" />
                                                    </svg>`) : "",
                    card.CreateQuestionDate]),
                },
                sort: true,
                resizable: true,
                search: true,
                pagination: {
                    pageSize: 10
                },
                theme: 'mermaid',
                // onCellClick: (e, cell) => {
                //     console.log(`Button clicked in row ${cell.row.index}`);
                // }
            });
            grid.render(document.getElementById("myGrid"));
        });
    </script>
    <script>
        

        
        document.getElementById('buttonForCalendar').addEventListener('click', function () {
            var myDiv = document.getElementById('calDiv');
            if (myDiv.style.display === 'none') {
                myDiv.style.display = 'block';

                    var calendarEl = document.getElementById('calendar');
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'dayGridMonth',
                        locale: 'uk',
                        headerToolbar: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'dayGridMonth,listMonth'
                        },
                        dayMaxEvents: true,
                        events: {
                            url: '/Home/getAllQuestionsForCalendar',
                            method: 'GET',
                            failure: function () {
                                alert('there was an error while fetching events!');
                            },
                        }
                    });
                    calendar.render();

            } else {
                myDiv.style.display = 'none';
            }
        });

    </script>
}

@*
                if("1" == "2"){ gridjs.html(
            `
<svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 11.917 9.724 16.5 19 7.5" />
</svg>`)
    }else {
        gridjs.html(
            `< svg class= "w-6 h-6 text-gray-800 dark:text-white" aria - hidden="true" xmlns = "http://www.w3.org/2000/svg" width = "24" height = "24" fill = "none" viewBox = "0 0 24 24" >
<path stroke="currentColor" stroke - linecap="round" stroke - linejoin="round" stroke - width="2" d="M6 18 17.94 6M18 18 6.06 6" />
    </svg>`
)
    } *@